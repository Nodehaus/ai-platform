package training_datasets

import "ai-platform/cmd/web"

templ TrainingDatasetStep1(projectID string, projectName string) {
	@web.App("max-w-6xl") {
		<div class="max-w-6xl mx-auto">
			<div class="bg-white border border-gray-200 rounded-lg p-8 shadow-md mb-8">
				<div class="mb-6">
					<h1 class="text-2xl font-bold text-gray-900 mb-2">1/4 Base Corpus</h1>
					<p class="text-gray-600">Project: { projectName }</p>
				</div>

				<form id="step1-form" class="space-y-6">
					<div>
						<div class="space-y-4">
							<div>
								<label class="flex items-center">
									<input
										type="radio"
										name="corpus-option"
										value="no-corpus"
										class="mr-3 text-blue-600"
									/>
									<span class="text-sm text-gray-700">Create without corpus</span>
								</label>
							</div>
							<div>
								<label class="flex items-center">
									<input
										type="radio"
										name="corpus-option"
										value="base-corpus"
										class="mr-3 text-blue-600"
									/>
									<span class="text-sm text-gray-700">Create with Nodehaus base corpus</span>
								</label>
							</div>
							<div>
								<label class="flex items-center">
									<input
										type="radio"
										name="corpus-option"
										value="upload-corpus"
										class="mr-3 text-blue-600"
									/>
									<span class="text-sm text-gray-700">Upload corpus as .zip (with one or more .json/.jsonl/.csv files)</span>
								</label>
							</div>
						</div>
					</div>

					<!-- Base corpus selection (hidden by default) -->
					<div id="base-corpus-section" class="hidden">
						<label for="corpus" class="block text-sm font-medium text-gray-700 mb-2">
							Select Base Corpus
						</label>
						<select
							id="corpus"
							name="corpus"
							class="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
						>
							<option value="">Choose a corpus...</option>
							<option value="eurlex">EUR-Lex</option>
						</select>
					</div>

					<!-- Upload section (hidden by default) -->
					<div id="upload-corpus-section" class="hidden">
						<label for="corpus-file" class="block text-sm font-medium text-gray-700 mb-2">
							Upload Corpus File
						</label>
						<input
							type="file"
							id="corpus-file"
							name="corpus-file"
							accept=".zip"
							class="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
						/>
					</div>

					<!-- Coming soon messages -->
					<div id="coming-soon-message" class="hidden">
						<div class="bg-yellow-50 border border-yellow-200 rounded-md p-4">
							<div class="flex">
								<div class="flex-shrink-0">
									<svg class="h-5 w-5 text-yellow-400" viewBox="0 0 20 20" fill="currentColor">
										<path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd" />
									</svg>
								</div>
								<div class="ml-3">
									<p class="text-sm text-yellow-700">
										<strong>Coming soon!</strong> This feature is currently under development.
									</p>
								</div>
							</div>
						</div>
					</div>
				</form>

				<div class="mt-8 flex justify-between">
					<a
						href="/web/home"
						class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50"
					>
						‚Üê Back
					</a>
					<button
						id="next-btn"
						class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-gray-400 cursor-not-allowed"
						disabled
					>
						Next
					</button>
				</div>
			</div>
		</div>

		<script>
			const projectId = {{ projectID }};
			const nextBtn = document.getElementById('next-btn');
			const baseCorpusSection = document.getElementById('base-corpus-section');
			const uploadCorpusSection = document.getElementById('upload-corpus-section');
			const comingSoonMessage = document.getElementById('coming-soon-message');
			const corpusSelect = document.getElementById('corpus');

			// Handle radio button changes
			document.querySelectorAll('input[name="corpus-option"]').forEach(function(radio) {
				radio.addEventListener('change', function() {
					// Hide all sections first
					baseCorpusSection.classList.add('hidden');
					uploadCorpusSection.classList.add('hidden');
					comingSoonMessage.classList.add('hidden');

					// Reset next button to disabled state
					disableNextButton();

					if (this.value === 'base-corpus') {
						baseCorpusSection.classList.remove('hidden');
						// Check if corpus is already selected
						if (corpusSelect.value) {
							enableNextButton();
						}
					} else if (this.value === 'no-corpus') {
						enableNextButton();
					} else if (this.value === 'upload-corpus') {
						if (this.value === 'upload-corpus') {
							uploadCorpusSection.classList.remove('hidden');
						}
						comingSoonMessage.classList.remove('hidden');
						// Keep next button disabled for coming soon features
					}
				});
			});

			// Handle corpus selection changes (for base corpus option)
			corpusSelect.addEventListener('change', function() {
				const selectedRadio = document.querySelector('input[name="corpus-option"]:checked');
				if (selectedRadio && selectedRadio.value === 'base-corpus') {
					if (this.value) {
						enableNextButton();
					} else {
						disableNextButton();
					}
				}
			});

			function enableNextButton() {
				nextBtn.disabled = false;
				nextBtn.classList.remove('bg-gray-400', 'cursor-not-allowed');
				nextBtn.classList.add('bg-blue-600', 'hover:bg-blue-700');
				nextBtn.onclick = function() {
					let corpus = '';
					if (corpusSelect.value) {
						corpus = corpusSelect.value;
					}
					console.log(corpus);
					window.location.href = '/web/projects/' + projectId + '/training-datasets/step2?corpus=' + encodeURIComponent(corpus);
				};
			}

			function disableNextButton() {
				nextBtn.disabled = true;
				nextBtn.classList.add('bg-gray-400', 'cursor-not-allowed');
				nextBtn.classList.remove('bg-blue-600', 'hover:bg-blue-700');
				nextBtn.onclick = null;
			}
		</script>
	}
}