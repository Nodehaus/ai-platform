package training_datasets

import "ai-platform/cmd/web"

templ TrainingDatasetStep3(projectID string, projectName string, corpus string, language string, defaultPrompt string) {
	@web.App("max-w-6xl") {
		<div class="max-w-6xl mx-auto">
			<div class="bg-white border border-gray-200 rounded-lg p-8 shadow-md mb-8">
				<div class="mb-6">
					<h1 class="text-2xl font-bold text-gray-900 mb-2">3/4 Create Training Data Prompt</h1>
					<p class="text-gray-600">Project: { projectName }</p>
				</div>

				<form id="step3-form" class="space-y-6">
					<div>
						<label for="prompt" class="block text-sm font-medium text-gray-700 mb-2">
							Generate Prompt
						</label>
						<textarea
							id="prompt"
							name="prompt"
							rows="20"
							required
							placeholder="Describe the task that you want to train on in detail and add a JSON output format"
							class="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
						>{ defaultPrompt }</textarea>
					</div>

					<div class="grid grid-cols-1 gap-4">
						<div>
							<label for="field-names" class="block text-sm font-medium text-gray-700 mb-2">
								Field Names
							</label>
							<input
								type="text"
								id="field-names"
								name="field-names"
								required
								placeholder="Comma-separated fields of your JSON output"
								value="question,answer,complexity"
								class="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
							/>
							<p class="text-xs text-gray-500 mt-1">Comma separated</p>
						</div>

						<div>
							<label for="input-field" class="block text-sm font-medium text-gray-700 mb-2">
								Input Field
							</label>
							<input
								type="text"
								id="input-field"
								name="input-field"
								required
								placeholder="The excepted input field of your JSON"
								value="question"
								class="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
							/>
						</div>

						<div>
							<label for="output-field" class="block text-sm font-medium text-gray-700 mb-2">
								Output Field
							</label>
							<input
								type="text"
								id="output-field"
								name="output-field"
								required
								placeholder="The expected output field of your JSON"
								value="answer"
								class="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
							/>
						</div>
					</div>
				</form>

				<div class="mt-8 flex justify-between">
					<a
						href={ templ.SafeURL("/web/projects/" + projectID + "/training-datasets/step2?corpus=" + corpus) }
						class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50"
					>
						‚Üê Back
					</a>
					<button
						id="next-btn"
						class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700"
					>
						Next
					</button>
				</div>
			</div>
		</div>

		<script>
			const projectId = {{ projectID }};
			const corpus = {{ corpus }};
			const language = {{ language }};

			function validateForm() {
				const prompt = document.getElementById('prompt').value.trim();
				const fieldNames = document.getElementById('field-names').value.trim();
				const inputField = document.getElementById('input-field').value.trim();
				const outputField = document.getElementById('output-field').value.trim();

				const nextBtn = document.getElementById('next-btn');

				if (prompt && fieldNames && inputField && outputField) {
					nextBtn.disabled = false;
					nextBtn.classList.remove('bg-gray-400', 'cursor-not-allowed');
					nextBtn.classList.add('bg-blue-600', 'hover:bg-blue-700');
					nextBtn.onclick = function() {
						const promptParam = encodeURIComponent(prompt);
						const fieldNamesParam = encodeURIComponent(fieldNames);
						const inputFieldParam = encodeURIComponent(inputField);
						const outputFieldParam = encodeURIComponent(outputField);
						window.location.href = '/web/projects/' + projectId + '/training-datasets/step4?corpus=' + encodeURIComponent(corpus) + '&language=' + encodeURIComponent(language) + '&prompt=' + promptParam + '&field_names=' + fieldNamesParam + '&input_field=' + inputFieldParam + '&output_field=' + outputFieldParam;
					};
				} else {
					nextBtn.disabled = true;
					nextBtn.classList.add('bg-gray-400', 'cursor-not-allowed');
					nextBtn.classList.remove('bg-blue-600', 'hover:bg-blue-700');
					nextBtn.onclick = null;
				}
			}

			document.getElementById('prompt').addEventListener('input', validateForm);
			document.getElementById('field-names').addEventListener('input', validateForm);
			document.getElementById('input-field').addEventListener('input', validateForm);
			document.getElementById('output-field').addEventListener('input', validateForm);
			validateForm();
		</script>
	}
}