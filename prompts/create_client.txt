We want to implement an S3 client to submit the training dataset creation job as a JSON to S3. Implement an adapter `training_dataset_job_client.go` that writes the following JSON to a S3 bucket (the values are examples):

```
{
    "corpus_s3_path": "/documents/eurlex",
    "corpus_files_subset": [],
    "language_iso": "deu",
    "user_id": "72b45c20-874e-4e2a-871c-519de0b0d5eb",
    "training_dataset_id": "9c29d344-bade-4e98-ae0b-910841068790",
    "generate_prompt": "You task is to generate training dataset for question answering.",
    "generate_examples_number": 100
    "generate_model": "gemma3:8b",
    "generate_model_runner": "runpod_ollama"
}
```

We will configure the S3 client with three environment variables, you can assume they exist: AWS_ENDPOINT_URL, AWS_DEFAULT_REGION and APP_S3_BUCKET. The path for the job files is `/jobs`.

The job file will be written in the use case after we created the training dataset in the database.

---

We want to implement another S3 client to get all training dataset JSONs that an external runner generated. The client will get all the JSON files from the path `datasets/{training_dataset_id}/`. Each JSON file contains two fields that we need: `total_generation_time_seconds` and `annotations`. You can find an example JSON file in `02002L0058-20091219_eng.json`. Sum up all `total_generation_time_seconds` to get the number for the full training dataset generation. Return all annotations in a single list. We want to use that client in the `internal/application/domain/use_cases/update_training_dataset_status_use_case_impl.go`. When the status is set to `DONE` we will get all the annotations and the `total_generation_time_seconds` and write it to the database as TrainingDataItem. Check that each annotation has the fields defined in `FieldNames` and write them in the same order to the `values` of the `TrainingDataItem`. The field `question`, `answer` and `complexity` are specific to this one training dataset. Other datasets might have different fields, depending on the `FieldNames`.